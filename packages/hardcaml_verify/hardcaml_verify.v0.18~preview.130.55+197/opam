opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/hardcaml_verify"
bug-reports: "https://github.com/janestreet/hardcaml_verify/issues"
dev-repo: "git+https://github.com/janestreet/hardcaml_verify.git"
doc:
  "https://ocaml.janestreet.com/ocaml-core/latest/doc/hardcaml_verify/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"             {>= "5.1.0"}
  "base"              {= "v0.18~preview.130.55+197"}
  "hardcaml"          {= "v0.18~preview.130.55+197"}
  "hardcaml_waveterm" {= "v0.18~preview.130.55+197"}
  "jane_rope"         {= "v0.18~preview.130.55+197"}
  "ppx_hardcaml"      {= "v0.18~preview.130.55+197"}
  "ppx_jane"          {= "v0.18~preview.130.55+197"}
  "ppx_rope"          {= "v0.18~preview.130.55+197"}
  "stdio"             {= "v0.18~preview.130.55+197"}
  "dune"              {>= "3.17.0"}
  "re"                {>= "1.8.0"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis: "Hardcaml Verification Tools"
description: """
Tools for verifying properties of Hardcaml circuits.

Combinational circuits can be converted to 'conjunctive normal form' for input into SAT
solvers via DIMAC files. Support for a few opensource solvers is integrated - minisat,
picosat, Z3 - just ensure they are in your PATH.

Circuits can also be converted to NuSMV format for advanced bounded and unbounded model
checking tasks.
"""
url {
  src:
    "https://github.com/janestreet/hardcaml_verify/archive/616abc2010fd733c8189f63bf09d725f6b91d8ca.tar.gz"
  checksum:
    "sha256=3d1e82917b27c293dee87251959a671b0184f3cdc272e7d2087e08b77e821352"
}
